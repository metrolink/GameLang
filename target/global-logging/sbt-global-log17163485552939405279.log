[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\toan\AppData\Local\Temp\idea1.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\toan\AppData\Local\Temp\idea1.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.8.0 (Oracle Corporation Java 16.0.2)
[debug]       Load.loadUnit: plugins took 159.824ms
[debug]       Load.loadUnit: defsScala took 0.4536ms
[debug] [Loading] Scanning directory C:\Users\toan\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\toan\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 39.4975 ms
[debug]           Load.resolveProject(global-plugins) took 82.8668ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\toan\.sbt\1.0\plugins, plugins: List(<none>))) took 159.5456ms
[debug] [Loading] Done in C:\Users\toan\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 195.0341ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.7299ms
[debug]     Load.loadUnit(file:/C:/Users/toan/.sbt/1.0/plugins/, ...) took 372.6906ms
[debug]   Load.apply: load took 615.6258ms
[debug]   Load.apply: resolveProjects took 7.0218ms
[debug]   Load.apply: finalTransforms took 77.6377ms
[debug]   Load.apply: config.delegates took 16.7239ms
[debug]   Load.apply: Def.make(settings)... took 562.6229ms
[debug]   Load.apply: structureIndex took 221.8065ms
[debug]   Load.apply: mkStreams took 2.2064ms
[info] loading global plugins from C:\Users\toan\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 3674.7463ms
[debug]           Load.loadUnit: plugins took 61.3196ms
[debug]           Load.loadUnit: defsScala took 0.007ms
[debug] [Loading] Scanning directory C:\Users\toan\Documents\Universitet i bergen\UIB\PrisonRework\project
[debug]             Load.loadUnit: mkEval took 8.2816ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\toan\Documents\Universitet i bergen\UIB\PrisonRework\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.75 ms
[info] loading settings for project prisonrework-build from idea1.sbt ...
[debug]               Load.resolveProject(prisonrework-build) took 13.4312ms
[debug]             Load.loadTransitive: finalizeProject(Project(id prisonrework-build, base: C:\Users\toan\Documents\Universitet i bergen\UIB\PrisonRework\project, plugins: List(<none>))) took 15.8379ms
[debug] [Loading] Done in C:\Users\toan\Documents\Universitet i bergen\UIB\PrisonRework\project, returning: (prisonrework-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 202.4134ms
[debug]           Load.loadUnit: cleanEvalClasses took 8.456ms
[debug]         Load.loadUnit(file:/C:/Users/toan/Documents/Universitet%20i%20bergen/UIB/PrisonRework/project/, ...) took 274.1855ms
[debug]       Load.apply: load took 276.9032ms
[debug]       Load.apply: resolveProjects took 0.1324ms
[debug]       Load.apply: finalTransforms took 10.3294ms
[debug]       Load.apply: config.delegates took 0.3661ms
[debug]       Load.apply: Def.make(settings)... took 100.0707ms
[debug]       Load.apply: structureIndex took 40.7634ms
[debug]       Load.apply: mkStreams took 0.0021ms
[info] loading project definition from C:\Users\toan\Documents\Universitet i bergen\UIB\PrisonRework\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 819.7613ms
[debug]     Load.loadUnit: defsScala took 0.0036ms
[debug] [Loading] Scanning directory C:\Users\toan\Documents\Universitet i bergen\UIB\PrisonRework
[debug]       Load.loadUnit: mkEval took 0.339ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\toan\Documents\Universitet i bergen\UIB\PrisonRework, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 2.7656 ms
[info] loading settings for project prisonrework from build.sbt ...
[debug]         Load.resolveProject(prisonrework) took 37.5694ms
[debug]       Load.loadTransitive: finalizeProject(Project(id prisonrework, base: C:\Users\toan\Documents\Universitet i bergen\UIB\PrisonRework, plugins: List(<none>))) took 42.043ms
[debug] [Loading] Done in C:\Users\toan\Documents\Universitet i bergen\UIB\PrisonRework, returning: (prisonrework)
[debug]     Load.loadUnit: loadedProjectsRaw took 114.8054ms
[debug]     Load.loadUnit: cleanEvalClasses took 18.8508ms
[debug]   Load.loadUnit(file:/C:/Users/toan/Documents/Universitet%20i%20bergen/UIB/PrisonRework/, ...) took 955.3024ms
[debug] Load.apply: load took 958.7679ms
[debug] Load.apply: resolveProjects took 0.1458ms
[debug] Load.apply: finalTransforms took 31.7755ms
[debug] Load.apply: config.delegates took 0.4329ms
[debug] Load.apply: Def.make(settings)... took 72.5507ms
[debug] Load.apply: structureIndex took 23.5855ms
[debug] Load.apply: mkStreams took 0.0024ms
[info] set current project to PrisonRework (in build file:/C:/Users/toan/Documents/Universitet%20i%20bergen/UIB/PrisonRework/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 62547 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 62547, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to PrisonRework (in build file:/C:/Users/toan/Documents/Universitet%20i%20bergen/UIB/PrisonRework/)
[debug] > Exec(idea-shell, None, None)
